
create table user_kposminin.vk_profiles_fields as 
select * from
(select 
regexp_extract(lower(profile),'userid\":\"([^\"]*)\"',1) as vk_id,
regexp_extract(lower(profile),'age\":([0-9]*)',1) as age,
regexp_extract(lower(profile),'birthyear\":([0-9]*)',1) as birthYear,
regexp_extract(lower(profile),'birthmonth\":([0-9]*)',1) as birthMonth,
regexp_extract(lower(profile),'birthdateiso\":\"([^\"]*)\"',1) as birthdate,
regexp_extract(lower(profile),'educationlevel\":\"([^\"]*)\"',1) as educationLevel,
regexp_extract(lower(profile),'phone_mobile\":\\[?\"([^\"]*)\"',1) as phone_mobile,
regexp_extract(lower(profile),'verified\":([^,\}]*)(,|\})',1) as verified,
regexp_extract(lower(profile),'settlement\":\"([^\"]*)\"',1) as LIVING_PLACE_settlement,
regexp_extract(lower(profile),'gender\":\"([^\"]*)\"',1) as gender 
from prod_odd_social_graph.vk_profiles_actual ) a
where
age <> "" or birthYear <> ""
;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

create table user_kposminin.vk_profiles_fields_w_id as
select 
  a.*,
  b.id
  from 
       user_kposminin.vk_profiles_fields a
 inner join
       (select distinct
         uid_str as id,
         property_value,
         load_src
        from
         prod_dds.md_uid_property 
        where
         property_cd = 'SN_PROFILE_VK'
       ) b on a.vk_id = b.property_value
;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

create table user_kposminin.vk_ages_visits as
select a.vk_id,
       v.url_fragment,
       v.visit_count,
       v.average_visit_hour,
       v.load_src,
       v.ymd as visit_ymd   
 from user_kposminin.vk_profiles_fields_w_id a
inner join prod_odd.visit_feature v on v.id = a.id 
where v.ymd between '2017-05-23' and '2017-05-24'
;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 


create table user_kposminin.vk_ages_visits_test as
select a.vk_id,
       v.url_fragment,
       v.visit_count,
       v.average_visit_hour,
       v.load_src,
       v.ymd as visit_ymd   
 from user_kposminin.vk_profiles_fields_w_id a
inner join prod_odd.visit_feature v on v.id = a.id 
where v.ymd = '2017-05-27'
;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

create TABLE user_kposminin.vk_ages_urlfr_tgt_cnt as
SELECT 
  url_fragment
 ,cnt_positive as cnt_positive
 ,cnt_total as cnt_total
 ,log(((cnt_positive) + 0.1)/((cnt_total) - (cnt_positive) + 0.1)) as score
 ,current_timestamp() as load_dttm
 ,'2017-05-24' as ymd
 ,'vk-ages' as targetl
from
   (
   select 
      count(distinct b.vk_id) as cnt_total,
      count(distinct if(b.age<18, b.vk_id, Null)) as cnt_positive,
      a.url_fragment
   from
      user_kposminin.vk_ages_visits a
      inner join user_kposminin.vk_profiles_fields b on a.vk_id = b.vk_id
   group by a.url_fragment
   ) c
;



-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 

-- Для теста берем не все куки

create TABLE user_kposminin.vk_ages_urlfr_tgt_cnt_tst as
SELECT 
  url_fragment
 ,cnt_positive as cnt_positive
 ,cnt_total as cnt_total
 ,log(((cnt_positive) + 0.1)/((cnt_total) - (cnt_positive) + 0.1)) as score
 ,current_timestamp() as load_dttm
 ,'2017-05-24' as ymd
 ,'vk-ages' as targetl
from
   (
   select 
      count(distinct b.vk_id) as cnt_total,
      count(distinct if(b.age<18, b.vk_id, Null)) as cnt_positive,
      a.url_fragment
   from
      user_kposminin.vk_ages_visits a
      inner join user_kposminin.vk_profiles_fields b on a.vk_id = b.vk_id
   where substr(md5(b.vk_id),1,1) >= '4'
   group by a.url_fragment
   ) c
;


create table user_kposminin.vk_ages_test as
select a.vk_id,
       max(if(c.age < 18,1,0)) as label,
       max(b.score) as max_score,
       avg(b.score) as avg_score,
       count(*) as cnt,
       sum(visit_count) as visit_count, 
       avg(if(b.score > -1, a.average_visit_hour, Null)) as good_url_avg_hour
  from (select * from user_kposminin.vk_ages_visits_test where substr(md5(vk_id),1,1) < '4') a
 inner join (select * from user_kposminin.vk_ages_urlfr_tgt_cnt_tst where cnt_total > 500*13/16 ) b on a.url_fragment = b.url_fragment
 inner join user_kposminin.vk_profiles_fields c on a.vk_id = c.vk_id
 group by a.vk_id
;


create table user_kposminin.school_age_id as
select a.phone_mobile,
       if(wo_task_reason_desc = 'Не соответствует по возрасту',1,0) as label,
       m2.vk_id
  from big_data_science.aza_to_liru_170627 a
  inner join (select 
         uid_str as id,
         property_value as phone_num,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'PHONE'
       ) m1 on substr(m1.phone_num,3,20) = substr(a.phone_mobile, 2, 20)
  inner join (select 
         uid_str as id,
         property_value as vk_id,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'SN_PROFILE_VK'
       ) m2 on m1.id = m2.id
;

insert overwrite table user_kposminin.school_age_id
select distinct phone_mobile, label, vk_id 
from user_kposminin.school_age_id;

-- Качество посредственное, оценочная точность 80%

Проверка: сравнение маркировки школьников из профилей вк и наших звонков:

with tmp as (
select a.vk_id,a.label as aza_label,if(b.age<18,1,0) as vk_label
from user_kposminin.school_age_id a 
inner join user_kposminin.vk_profiles_fields b on a.vk_id = b.vk_id)
select aza_label, vk_label, count(*) as cnt from tmp group by aza_label, vk_label;

 	aza_label	vk_label	cnt
	0	0	34078979
	0	1	7629319
	1	0	897041
	1	1	373091
Точность  80%
precision 5%
recall    29%
(если считать aza истиной, а вк - предиктором)




create table user_kposminin.vk_ages_test_2 as
with id_tab as (
  select 
       if(wo_task_reason_desc = 'Не соответствует по возрасту',1,0) as label,
       m1.id
  from big_data_science.aza_to_liru_170627 a
  inner join (select 
         uid_str as id,
         property_value as phone_num,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'PHONE'
       ) m1 on substr(m1.phone_num,3,20) = substr(a.phone_mobile, 2, 20)
  )
  
select a.id,
       max(c.label) as label,
       max(b.score) as max_score,
       avg(b.score) as avg_score,
       count(*) as cnt,
       sum(visit_count) as visit_count, 
       avg(if(b.score > -1, a.average_visit_hour, Null)) as good_url_avg_hour
  from id_tab c
 inner join prod_odd.visit_feature a on a.id = c.id
 inner join (select * from user_kposminin.vk_ages_urlfr_tgt_cnt_tst where cnt_total > 500*13/16 ) b on a.url_fragment = b.url_fragment
 where a.ymd = '2017-05-27'
 group by a.id
;



-- скорим по-новому

create table user_kposminin.appl_ages_tgt_cnt as
with id_tab as (
  select 
       if(wo_task_reason_desc = 'Не соответствует по возрасту',1,0) as label,
       m1.id,
       m1.load_src
  from big_data_science.aza_to_liru_170627 a
  inner join (select 
         uid_str as id,
         property_value as phone_num,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'PHONE'
       ) m1 on substr(m1.phone_num,3,20) = substr(a.phone_mobile, 2, 20)
  where a.create_dt between  '2016-04-01 0:0:0.0'  and '2017-02-15 0:0:0.0' 
  ),
  t2 as (
select v.url_fragment,
     count(distinct i.id) as cnt_total,
     count(distinct if(i.label =1,i.id,Null)) as cnt_positive
  from id_tab i
 inner join prod_odd.visit_feature v on v.id = i.id and v.load_src = i.load_src
 
 where v.ymd between '2017-02-16' and '2017-03-01'
 group by v.url_fragment
    )

select url_fragment,
       cnt_total,
       cnt_positive,
       log((cnt_positive + 0.1)/(cnt_total - cnt_positive + 0.1)) as score
  from t2
 where cnt_total > 100
    
;


-- --------------------------------------------------------------------------

create table user_kposminin.appl_ages_visits_mar as
with id_tab as (
  select 
       m1.phone_num,
       if(wo_task_reason_desc = 'Не соответствует по возрасту',1,0) as label,
       m1.id,
       m1.load_src
  from big_data_science.aza_to_liru_170627 a
  inner join (select 
         uid_str as id,
         property_value as phone_num,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'PHONE'
       ) m1 on substr(m1.phone_num,3,20) = substr(a.phone_mobile, 2, 20)
  where a.create_dt between  '2016-04-01 0:0:0.0'  and '2017-02-30 0:0:0.0' 
  )
  
select i.phone_num,
       v.url_fragment,
       v.average_visit_hour
  from id_tab i
 inner join prod_odd.visit_feature v on v.id = i.id and v.load_src = i.load_src
 
 where v.ymd between '2017-03-01' and '2017-03-30'    
;


create table user_kposminin.appl_ages_visits_apr_test as
with id_tab as (
  select 
       m1.phone_num,
       if(wo_task_reason_desc = 'Не соответствует по возрасту',1,0) as label,
       m1.id,
       m1.load_src
  from big_data_science.aza_to_liru_170627 a
  inner join (select 
         uid_str as id,
         property_value as phone_num,
         load_src
       from
         prod_dds.md_uid_property 
       where
         property_cd = 'PHONE'
       ) m1 on substr(m1.phone_num,3,20) = substr(a.phone_mobile, 2, 20)
  where a.create_dt between  '2017-05-01 0:0:0.0'  and '2017-08-30 0:0:0.0' 
  )
  
select i.phone_num,
       v.url_fragment,
       v.average_visit_hour
  from id_tab i
 inner join prod_odd.visit_feature v on v.id = i.id and v.load_src = i.load_src
 
 where v.ymd between '2017-04-01' and '2017-04-30'
  and  substr(md5(phone_num),1,1) < '8'
;



-- 

create table user_kposminin.appl_ages_train_2 as
select a.phone_num,
       max(a.label) as label,
       max(b.score) as max_score,
       avg(b.score) as avg_score,
       count(*) as cnt,       
       avg(if(b.score > -3.5, a.average_visit_hour, Null)) as good_url_avg_hour
  from  user_kposminin.appl_ages_visits_mar_1 a 
 inner join (select * from user_kposminin.appl_ages_tgt_cnt where cnt_total > 1000 or cnt_positive > 50  ) b on a.url_fragment = b.url_fragment
 group by a.phone_num
;


create table user_kposminin.appl_ages_test_2 as
select a.phone_num,
       max(a.label) as label,
       max(b.score) as max_score,
       avg(b.score) as avg_score,
       count(*) as cnt,       
       avg(if(b.score > -3.5, a.average_visit_hour, Null)) as good_url_avg_hour
  from  user_kposminin.appl_ages_visits_apr_test_1 a 
 inner join (select * from user_kposminin.appl_ages_tgt_cnt where cnt_total > 1000 or cnt_positive > 50  ) b on a.url_fragment = b.url_fragment
 group by a.phone_num
;




