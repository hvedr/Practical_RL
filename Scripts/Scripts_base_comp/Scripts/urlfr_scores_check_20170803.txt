
create table user_kposminin.urlfr_scores_check_20170803 as
with 
mymd_t as
 (
 select 
   max(ymd) as max_ymd
 from 
   prod_odd.url_fragment_target_cnt_cumulative
 where      
      ymd < date_add('2017-07-11',-3)
 )
  select 
    v.id, 
    max(if(u.id is Null,0,1)) as label, 
    max(t1.coeff) as score1, 
    max(t2.score) as score2,
    max(t3.score) as score3
   
  from
   (select id, url_fragment from prod_odd.visit_feature where ymd = '2017-07-11') v
   left join 
    (
      select id
      from prod_odd.user_action 
      where ymd between '2017-07-11' and date_add('2017-07-11',3)
      and action_type = 'tinkoff_platinum_approved_application'
    ) u on u.id = v.id
   left join dds_dic.max_coeff_url_fragment_score t1 on t1.url_fragment = v.url_fragment and t1.segment_nm = 'la_apppr_ccall_2_1'
   left join
    (
    select
      url_fragment,
      score['tinkoff_platinum_approved_application03_1m'] as score
    from
      mymd_t my      
      inner join prod_odd.url_fragment_target_cnt_cumulative t on t.ymd = my.max_ymd
    where
      (cnt_total > 100000 or cnt_positive['tinkoff_platinum_approved_application03_1m'] > 2)
    ) t2 on t2.url_fragment = v.url_fragment 
   left join
    (
    select
      url_fragment,
      score['tinkoff_platinum_approved_application03_1m'] as score
    from prod_features_liveinternet.url_fragment_target_cnt_cumulative t 
    where
      (cnt_total > 300000 or cnt_positive['tinkoff_platinum_approved_application03_1m'] > 10)
      and t.ymd = '2017-07-01'
    ) t3 on t3.url_fragment = v.url_fragment 
   group by
    v.id
;


with 
st1 as (select nvl(a.score1,-100) as score, a.label as label from user_kposminin.urlfr_scores_check_20170803 a),
st2 as (select nvl(a.score2,-100) as score, a.label as label from user_kposminin.urlfr_scores_check_20170803 a),
st3 as (select nvl(a.score3,-100) as score, a.label as label from user_kposminin.urlfr_scores_check_20170803 a),
cs1 as (
  select 
    (1-label) * sum(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl,
    label * avg(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as precision,
    label * log(1 + exp(-score)) + (1 - label) * log(1 + exp(score)) as logloss,
    row_number() OVER (ORDER BY score DESC) as rank,
    label
  from st1),
cs2 as (
  select 
    (1-label) * sum(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl,
    label * avg(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as precision,
    label * log(1 + exp(-score)) + (1 - label) * log(1 + exp(score)) as logloss,
    row_number() OVER (ORDER BY score DESC) as rank,
    label
  from st2),
cs3 as (
  select 
    (1-label) * sum(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl,
    label * avg(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as precision,
    label * log(1 + exp(-score)) + (1 - label) * log(1 + exp(score)) as logloss,
    row_number() OVER (ORDER BY score DESC) as rank,
    label
  from st3)  
select 
  'Old coeffs' as name,
  '#ymd' as test_ymd,
  sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc,
  sum(precision)/sum(label) as auc_pr,
  avg(logloss) as logloss,
  sum(if(rank < 10000,label,0))/10000 *count(*)/ sum(label) as lift_10k,
  sum(if(rank < 50000,label,0))/50000 *count(*)/ sum(label) as lift_50k,
  sum(label)/count(*) as pos_share,
  count(*) as cnt
from cs1

union all

select 
  concat('New coeffs1 ',max(my.max_ymd)) as name, 
  '#ymd' as test_ymd,
  sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc,
  sum(precision)/sum(label) as auc_pr,
  avg(logloss) as logloss,
  sum(if(rank < 10000,label,0))/10000 *count(*)/ sum(label) as lift_10k,
  sum(if(rank < 50000,label,0))/50000 *count(*)/ sum(label) as lift_50k,
  sum(label)/count(*) as pos_share,
  count(*) as cnt
from cs2 a 
inner join mymd_t my

union all

select 
  concat('New coeffs2 ',max(my.max_ymd)) as name, 
  '#ymd' as test_ymd,
  sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc,
  sum(precision)/sum(label) as auc_pr,
  avg(logloss) as logloss,
  sum(if(rank < 10000,label,0))/10000 *count(*)/ sum(label) as lift_10k,
  sum(if(rank < 50000,label,0))/50000 *count(*)/ sum(label) as lift_50k,
  sum(label)/count(*) as pos_share,
  count(*) as cnt
from cs3 a 
inner join mymd_t my
;

