99-- скоринг урл-фрагментов. Стандартный - положительный класс берется из оставивших заявку в рассматриваемый день;
WITH t AS
 (
   SELECT
   v.urlfr AS urlfr
   ,COUNT(*) AS cnt_positive
  FROM
   (SELECT DISTINCT a.id FROM prod_features_liveinternet.user_action a WHERE a.ymd between '2016-11-24' and '2016-11-24' and a.action_type = 'tinkoff_platinum_approved_application') ta
    inner join prod_features_liveinternet.visits v on v.id = ta.id
  WHERE
   v.ymd = '2016-11-24'
  GROUP BY
   v.urlfr
   )

INSERT OVERWRITE TABLE
 prod_features_liveinternet.urlfr_tgt_cnt PARTITION (ymd='2016-11-24', target='tinkoff_platinum_approved_application@tinkoff_action')
SELECT
 s.urlfr AS urlfr
 ,nvl(t.cnt_positive, 0) as cnt_positive
 ,s.visitors as cnt_total
 ,current_timestamp() as load_dttm
FROM
 prod_features_liveinternet.urlfr_stat s
 LEFT OUTER JOIN t ON t.urlfr = s.urlfr
WHERE
 s.ymd='2016-11-24'



-- скоринг урл-фрагментов +3 - положительный класс берется из оставивших заявку в течение 3 дней после рассматриваемого (без самого рассматриваемого);
WITH t AS
 (
   SELECT
   v.urlfr AS urlfr
   ,COUNT(*) AS cnt_positive
  FROM
   (SELECT DISTINCT a.id FROM prod_features_liveinternet.user_action a WHERE a.ymd between '2016-11-25' and '2016-11-27' and a.action_type = 'tinkoff_platinum_approved_application') ta
    inner join prod_features_liveinternet.visits v on v.id = ta.id
  WHERE
   v.ymd = '2016-11-24'
  GROUP BY
   v.urlfr
   )

INSERT OVERWRITE TABLE
 prod_features_liveinternet.urlfr_tgt_cnt PARTITION (ymd='2016-11-24', target='tinkoff_platinum_approved_application3@tinkoff_action')
SELECT
 s.urlfr AS urlfr
 ,nvl(t.cnt_positive, 0) as cnt_positive
 ,s.visitors as cnt_total
 ,current_timestamp() as load_dttm
FROM
 prod_features_liveinternet.urlfr_stat s
 LEFT OUTER JOIN t ON t.urlfr = s.urlfr
WHERE
 s.ymd='2016-11-24'
;

-- скоринг урл-фрагментов 1+3 - положительный класс берется из оставивших заявку в рассматриваемый день либо в течение 3 дней после него.
WITH t AS
 (
   SELECT
   v.urlfr AS urlfr
   ,COUNT(*) AS cnt_positive
  FROM
   (SELECT DISTINCT a.id FROM prod_features_liveinternet.user_action a WHERE a.ymd between '2016-11-24' and '2016-11-27' and a.action_type = 'tinkoff_platinum_approved_application') ta
    inner join prod_features_liveinternet.visits v on v.id = ta.id
  WHERE
   v.ymd = '2016-11-24'
  GROUP BY
   v.urlfr
   )

INSERT OVERWRITE TABLE
 prod_features_liveinternet.urlfr_tgt_cnt PARTITION (ymd='2016-11-24', target='tinkoff_platinum_approved_application03@tinkoff_action')
SELECT
 s.urlfr AS urlfr
 ,nvl(t.cnt_positive, 0) as cnt_positive
 ,s.visitors as cnt_total
 ,current_timestamp() as load_dttm
FROM
 prod_features_liveinternet.urlfr_stat s
 LEFT OUTER JOIN t ON t.urlfr = s.urlfr
WHERE
 s.ymd='2016-11-24'
;




create table user_kposminin.urlfr_tgt_cnt_avg_week as
SELECT 
  urlfr
 ,sum(cnt_positive)/7 as cnt_positive
 ,sum(cnt_total)/7 as cnt_total
 ,log((sum(cnt_positive) + 0.1)/(sum(cnt_total) - sum(cnt_positive) + 0.1)) as score
 ,current_timestamp() as load_dttm
 ,'2016-12-07' as ymd
 ,target
from
 prod_features_liveinternet.urlfr_tgt_cnt
where 
 ymd between '2016-12-01' and '2016-12-07'
 and target in ('tinkoff_platinum_approved_application@tinkoff_action','tinkoff_platinum_approved_application3@tinkoff_action','tinkoff_platinum_approved_application03@tinkoff_action')
group by 
 urlfr
 ,target 
;



create table user_kposminin.tgt_modific_calc3 as
  select
    m.phone_num
   ,nvl(max(p.first_day),0) as first_day
   ,max(if(p.id is Null,0,1)) as label
   ,nvl(max(t1.score),-20) as score1
   ,nvl(max(t2.score),-20) as score2
   ,nvl(max(log((t1.cnt_positive - t2.cnt_positive + 0.1)/(t1.cnt_total - (t1.cnt_positive - t2.cnt_positive) + 0.1))),-20) as score3
   ,nvl(max(t3.score),-20) as score4
  from
    (select 
       uid_str as id,
       property_value as phone_num
     from
       prod_dds.md_uid_property 
     where
       property_cd = 'PHONE' and
       load_src = 'LI.02'
      ) m
    inner join prod_features_liveinternet.visits v on v.id = m.id
    left join (
     select urlfr, score,cnt_positive,cnt_total
     from user_kposminin.urlfr_tgt_cnt_avg_week
     where target  = 'tinkoff_platinum_approved_application03@tinkoff_action'      
       and ymd = '2016-12-07'
       and (cnt_total > 30000 or cnt_positive >= 1)
    ) t1 on t1.urlfr = v.urlfr
    left join (
     select urlfr, score,cnt_positive,cnt_total
     from user_kposminin.urlfr_tgt_cnt_avg_week
     where target  = 'tinkoff_platinum_approved_application@tinkoff_action'      
       and ymd = '2016-12-07'
       and (cnt_total > 30000 or cnt_positive >= 1)
    ) t2 on t2.urlfr = v.urlfr
    left join (
     select urlfr, score,cnt_positive,cnt_total
     from user_kposminin.urlfr_tgt_cnt_avg_week
     where target  = 'tinkoff_platinum_approved_application3@tinkoff_action'      
       and ymd = '2016-12-07'
       and (cnt_total > 30000 or cnt_positive >= 1)
    ) t3 on t3.urlfr = v.urlfr
    left join (  
       select id, if(ymd = '2016-12-14',1,0) as first_day from prod_features_liveinternet.user_action 
        where ymd between '2016-12-14' and '2016-12-16'
          and action_type = 'tinkoff_platinum_approved_application'
    ) p on p.id = v.id
where 
  v.ymd  = '2016-12-13'
  group by m.phone_num, v.ymd
;



with 
st as (select * from user_kposminin.tgt_modific_calc3),
cs1 as (select (1-label)*sum(label) OVER (ORDER BY score1 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st),
cs2 as (select (1-label)*sum(label) OVER (ORDER BY score2 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st),
cs3 as (select (1-label)*sum(label) OVER (ORDER BY score3 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st),

cs5 as (select (1-first_day)*sum(first_day) OVER (ORDER BY score1 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st),
cs6 as (select (1-first_day)*sum(first_day) OVER (ORDER BY score2 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st),
cs7 as (select (1-first_day)*sum(first_day) OVER (ORDER BY score3 DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from st)

select 'score03, label3' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs1 union all
select 'score0, label3' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs2 union all
select 'score3, label3' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs3 union all

select 'score03, first_day' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs5 union all
select 'score0, first_day' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs6 union all
select 'score3, first_day' as description, sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs7
;


-- Результат
	_u1.description	_u1.auc_roc
0	score03, first_day	0.6920662146466392
1	score0, first_day	0.68685394862725813
2	score3, first_day	0.6856998774191696
3	score03, label3	0.70391809593664589
4	score0, label3	0.69002423865734197
5	score3, label3	0.69045693707402278

