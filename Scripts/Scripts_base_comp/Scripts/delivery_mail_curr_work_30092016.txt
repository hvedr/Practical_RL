drop table if exists user_kposminin.deliv_results;
create table user_kposminin.deliv_results as 
select
    e.ymd as deliv_ymd,
    cl.h_uid_rk,
    e.email,
    e.click,
    e.open,
    if(pa.utm_term is Null,0,1) as app_start,
    if(pa.is_processed = 3,1,0) as app_compl,
    e.unsubscribe,
    if(u.h_uid_rk is Null,0,1) as lam,
    u.score, 
    u.load_dttm, 
    u.segment_nm, 
    u.ymd as model_date
from    
    (select distinct
       to_date(coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm)) as ymd,
       t.email_address_txt as email,
       if(t.click_cnt > 0, 1, 0) as click, 
       if(t.open_flg = 'Y', 1, 0) as open,
       if(t.unsubscribe_flg  = 'Y', 1, 0) as unsubscribe
    from prod_dds.target_email t
    left join user_kposminin.roboemails d on d.email = t.email_address_txt
    where
         template_name in ('BULK_RegularPromos_cc_ss','bulk_regularpromos_cc_om1','bulk_regularpromos_cc_om2','bulk_regularpromos_cc_om3','BULK_RegularPromos_cc_ss2',
                           'bulk_regularpromos_cc_om_h','bulk_regularpromos_cc_dp2','bulk_regularpromos_cc_dp','Bulk_cc_ss_dd', 'bulk_regularpromos_cc_ret','bulk_regularpromos_cc_ret2',
                          'BULK_RegularPromos_cc_ss_')
         and not collector_email_flg = 1
         and not_sent_flg is Null
         and d.email is Null
         and coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm) > '2016-08-28'
    ) e
    left join (select h_contact_rk, contact_str from prod_dds.h_contact where contact_type_cd = 'EMAIL') c on c.contact_str = e.email
    left join (select h_contact_rk, h_uid_rk from prod_dds.l_uid_contact where contact_type_cd = 'EMAIL') cl on cl.h_contact_rk = c.h_contact_rk
    left join prod_lookalike.user_x_segment u on cl.h_uid_rk = u.h_uid_rk    
    left join prod_dds.portal_application pa on cl.h_uid_rk = pa.utm_term
;


select huidcnt,cnt,count(email) as emailcnt from 
(select email,deliv_ymd,count(*) as cnt, count(distinct h_uid_rk) as huidcnt from user_kposminin.deliv_results group by email,deliv_ymd) a
group by  huidcnt,cnt 
order by huidcnt,cnt ;

drop table if exists user_kposminin.deliv_results_pos_unique;
create table user_kposminin.deliv_results_pos_unique as
select
   deliv_ymd,
   h_uid_rk,
   email,
   lam,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'open', open
     )
   ).open as open,
    max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'click', click
     )
   ).click as click,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'unsubscribe', unsubscribe
     )
   ).unsubscribe as unsubscribe,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'score', score
     )
   ).score as score,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'load_dttm', load_dttm
     )
   ).load_dttm as load_dttm,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'model_date', model_date
     )
   ).model_date as model_date
from user_kposminin.deliv_results 
where deliv_ymd >= load_dttm
group by deliv_ymd, h_uid_rk, email,lam
;







drop table if exists user_kposminin.deliv_results_5;
create table user_kposminin.deliv_results_5 as
select 
    a.deliv_ymd, 
    array(a.h_uid_rk) as h_uid_rk_arr,
    a.email,
    max(a.lam) as lam,
    max(a.open) as open,
    max(a.click) as click,
    max(a.unsubscribe) as unsubscribe,
    max(a.score) as score,
    max(a.load_dttm) as load_dttm,
    max(a.model_date) as model_date,
    max(if(b.utm_term is Null,0,1)) as app_start,
    max(if(b.is_processed = 3,1,0)) as app_compl 
from user_kposminin.deliv_results_pos_unique a
left join prod_dds.portal_application b on a.h_uid_rk = b.utm_term
group by a.deliv_ymd, a.email;



create table user_kposminin.deliv_results_6 as
select 
    a.deliv_ymd, 
    a.email,
    max(a.lam) as lam,
    max(a.open) as open,
    max(a.click) as click,
    max(a.unsubscribe) as unsubscribe,
    max(a.score) as score,
    max(a.load_dttm) as load_dttm,
    max(a.model_date) as model_date,
    max(app_start) as app_start,
    max(app_compl) as app_compl,
    count(distinct h_uid_rk) as huid_cnt
from user_kposminin.deliv_results_5 a
group by a.deliv_ymd, a.email;



select count(email) as total, count(distinct email) as email_cnt, sum(open) as open, sum(click) as click, sum(app_start),sum(app_compl) from deliv_results_6;


-- select cnt,count(email) as c from (select email, count(distinct h_uid_rk) as cnt from deliv_results_5 group by email) a group by cnt order by c desc;

with 
score_label as
(select score, app_compl as label from deliv_results_6),
cs as (select (1-label)*sum(label) OVER (ORDER BY score DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as sl  from score_label)
select sum(sl)*1.0/((count(*)-max(sl))*max(sl)) as auc_roc from cs;


select
   p.deliv_ymd,
   p.open_rate as por, n.open_rate as nor,
   p.click_rate as pcr, n.click_rate as ncr,
   p.unsubscr as pu, n.unsubscr as nu,
   p.cnt as pcnt, n.cnt as ncnt
from
    (select deliv_ymd, avg(click) as click_rate,avg(open) as open_rate,avg(unsubscribe) as unsubscr,count(*) as cnt from user_kposminin.deliv_results_6 group by deliv_ymd) p 
    left join (select deliv_ymd, avg(click) as click_rate,avg(open) as open_rate,avg(unsubscribe) as unsubscr,count(*) as cnt from user_kposminin.deliv_results where lam = 0 group by deliv_ymd) n 
    on p.deliv_ymd = n.deliv_ymd;
------------------------------------------------------

create table user_kposminin.deliv_results_20161025_1 as 
select
    e.ymd as deliv_ymd,
    c.h_uid_rk,
    e.email,
    e.click,
    e.open,
    e.unsubscribe,
    if(u.h_uid_rk is Null,0,1) as lam,
    u.score, 
    u.load_dttm, 
    u.segment_nm, 
    c.date as load_date,
    u.ymd as model_date
from    
    (select distinct
       to_date(coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm)) as ymd,
       t.email_address_txt as email,
       if(t.click_cnt > 0, 1, 0) as click, 
       if(t.open_flg = 'Y', 1, 0) as open,
       if(t.unsubscribe_flg  = 'Y', 1, 0) as unsubscribe
    from prod_dds.target_email t
    left join user_kposminin.roboemails d on d.email = t.email_address_txt
    where
         template_name in ('BULK_RegularPromos_cc_ss','bulk_regularpromos_cc_om1','bulk_regularpromos_cc_om2','bulk_regularpromos_cc_om3','BULK_RegularPromos_cc_ss2',
                           'bulk_regularpromos_cc_om_h','bulk_regularpromos_cc_dp2','bulk_regularpromos_cc_dp','Bulk_cc_ss_dd','bulk_regularpromos_cc_ret',
                           'bulk_regularpromos_cc_ret2','BULK_RegularPromos_cc_ss_')
         and not collector_email_flg = 1
         and not_sent_flg is Null
         and d.email is Null
         and coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm) > '2016-08-28'
    ) e
    left join (select distinct date, h_uid_rk, email_address_txt from user_kposminin.frank_bd_cc_surov) c on c.email_address_txt = e.email
    left join prod_lookalike.user_x_segment u on c.h_uid_rk = u.h_uid_rk    
where 
    c.date <= e.ymd and
    u.ymd  <= c.date;
;


create table user_kposminin.deliv_results_20161025_new as
select 
    a.deliv_ymd, 
    count(distinct a.h_uid_rk) as huid_cnt,
    a.email,
    max(a.lam) as lam,
    max(a.open) as open,
    max(a.click) as click,
    max(a.unsubscribe) as unsubscribe,
    max(a.score) as score,
    max(a.load_dttm) as load_dttm,
    max(a.load_date) as load_date,
    max(a.model_date) as model_date,
    max(if(b.utm_term is Null,0,1)) as app_start,
    max(if(b.is_processed = 3,1,0)) as app_compl,
    a.segment_nm
from user_kposminin.deliv_results_20161025_1 a
left join prod_dds.portal_application b on a.h_uid_rk = b.utm_term
where a.segment_nm in ('tcs_cc_appl_started','2016-08-19_2016-09-18_tinkoff_platinum_complete_application@tinkoff_action')
group by a.deliv_ymd, a.email,a.segment_nm;

    

-- результаты в разрезе сегмента
select
  segment_nm,
  count(*) as cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from user_kposminin.deliv_results_20161025_new
group by segment_nm;



-- результаты в разрезе задержки отправки письма
select 
  datediff(load_date, deliv_ymd) as lag,
  count(*) as cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from (
  select 
    deliv_ymd, 
    email, 
    max(open) as open, 
    max(click) as click, 
    max(unsubscribe) as unsubscribe, 
    max(load_date) as load_date, 
    max(app_start) as app_start, 
    max(app_compl) as app_compl
 from user_kposminin.deliv_results_20161025_new
 group by deliv_ymd, email
  ) g
group by datediff(load_date, deliv_ymd);


-- результаты в разрезе дня отправки

select 
  deliv_ymd,
  count(*) as cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from (
  select 
    deliv_ymd, 
    email, 
    max(open) as open, 
    max(click) as click, 
    max(unsubscribe) as unsubscribe, 
    max(load_date) as load_date, 
    max(app_start) as app_start, 
    max(app_compl) as app_compl
 from user_kposminin.deliv_results_20161025_new
 group by deliv_ymd, email
  ) g
group by deliv_ymd,;





-----------------
drop table if exists user_kposminin.deliv_results_raw_20161025;
create table user_kposminin.deliv_results_raw_20161025 as 
select
    e.ymd as deliv_ymd,
    c.h_uid_rk,
    e.email,
    e.click,
    e.open,
    e.unsubscribe,
    if(pa.utm_term is Null,0,1) as app_start,
    if(pa.is_processed = 3,1,0) as app_compl,
    if(u.h_uid_rk is Null,0,1) as lam,
    u.score, 
    u.load_dttm, 
    u.segment_nm,     
    u.ymd as model_date
from    
    (select distinct
       to_date(coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm)) as ymd,
       t.email_address_txt as email,
       if(t.click_cnt > 0, 1, 0) as click, 
       if(t.open_flg = 'Y', 1, 0) as open,
       if(t.unsubscribe_flg  = 'Y', 1, 0) as unsubscribe
    from prod_dds.target_email t
    left join user_kposminin.roboemails d on d.email = t.email_address_txt
    where
         template_name in ('BULK_RegularPromos_cc_ss','bulk_regularpromos_cc_om1','bulk_regularpromos_cc_om2','bulk_regularpromos_cc_om3','BULK_RegularPromos_cc_ss2',
                           'bulk_regularpromos_cc_om_h','bulk_regularpromos_cc_dp2','bulk_regularpromos_cc_dp','Bulk_cc_ss_dd','bulk_regularpromos_cc_ret',
                           'bulk_regularpromos_cc_ret2','BULK_RegularPromos_cc_ss_')
         and not collector_email_flg = 1
         and not_sent_flg is Null
         and d.email is Null
         and coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm) >= '2016-09-01'
    ) e
    left join (select distinct date, h_uid_rk, email_address_txt from user_kposminin.frank_bd_cc_surov) c on c.email_address_txt = e.email
    left join prod_lookalike.user_x_segment u on c.h_uid_rk = u.h_uid_rk
    left join prod_dds.portal_application pa on c.h_uid_rk = pa.utm_term
    left join hermes.platinum_lp plp on plp.lp = pa.lp
where 
    coalesce(cast(c.date as string),'0') <= cast(e.ymd as string) and
    coalesce(cast(u.ymd as string),'0') <= coalesce(cast(c.date as string),'9') and
    date_add(e.ymd,-7) <= coalesce(cast(u.ymd as string),'9') and
    coalesce(e.ymd,'0') <= coalesce(cast(pa.dt_created as string),'9') and
    (pa.product_name = 'cc_platinum' or (not plp.lp is Null) or pa.utm_term is Null)
;
   

   
drop table if exists user_kposminin.deliv_results_20161025_5;
create table user_kposminin.deliv_results_20161025_5 as 
select
    deliv_ymd,
    count(distinct h_uid_rk) as huid_cnt,
    count(*) as cnt,
    email,
    max(click) as click,
    max(open) as open,
    max(unsubscribe) as unsubscribe,
    max(app_start) as app_start,
    max(app_compl) as app_compl,
    max(lam) as lam,
    max(score) as score, 
    max(load_dttm) as load_dttm, 
    segment_nm as segment_nm,     
    max(model_date) as model_date
from user_kposminin.deliv_results_raw_20161025
group by deliv_ymd, email,segment_nm
;


select 
  if(lam=1,segment_nm,'other_segments') as segment_nm,
  count(*) as cnt,
  count(distinct deliv_ymd) as ymd_cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsub) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from
  user_kposminin.deliv_results_20161025_5
group by 
    lam, segment_nm
;
--  click

select
  segment_nm,
  count(*) as cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from user_kposminin.deliv_results_20161025_new
group by segment_nm;





drop table if exists user_kposminin.deliv_results_20161025_old;
create table user_kposminin.deliv_results_20161025_old as 
select
    e.ymd as deliv_ymd,
    cl.h_uid_rk,
    e.email,
    e.click,
    e.open,
    e.unsubscribe,
    if(u.h_uid_rk is Null,0,1) as lam,
    u.score, 
    u.load_dttm, 
    u.segment_nm, 
    u.ymd as model_date  
from    
    (select distinct
       to_date(coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm)) as ymd,
       t.email_address_txt as email,
       if(t.click_cnt > 0, 1, 0) as click, 
       if(t.open_flg = 'Y', 1, 0) as open,
       if(t.unsubscribe_flg  = 'Y', 1, 0) as unsubscribe
    from prod_dds.target_email t
    left join user_kposminin.roboemails d on d.email = t.email_address_txt
    where
         template_name in ('BULK_RegularPromos_cc_ss','bulk_regularpromos_cc_om1','bulk_regularpromos_cc_om2','bulk_regularpromos_cc_om3','BULK_RegularPromos_cc_ss2',
                           'bulk_regularpromos_cc_om_h','bulk_regularpromos_cc_dp2','bulk_regularpromos_cc_dp','Bulk_cc_ss_dd','bulk_regularpromos_cc_ret',
                           'bulk_regularpromos_cc_ret2','BULK_RegularPromos_cc_ss_')
         and not collector_email_flg = 1
         and not_sent_flg is Null
         and d.email is Null
         and coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm) > '2016-08-28'
    ) e
    left join (select h_contact_rk, contact_str from prod_dds.h_contact where contact_type_cd = 'EMAIL') c on c.contact_str = e.email
    left join (select h_contact_rk, h_uid_rk from prod_dds.l_uid_contact where contact_type_cd = 'EMAIL') cl on cl.h_contact_rk = c.h_contact_rk
    left join prod_lookalike.user_x_segment u on cl.h_uid_rk = u.h_uid_rk and u.segment_nm in ('tcs_cc_appl_started','2016-08-19_2016-09-18_tinkoff_platinum_complete_application@tinkoff_action')
    where u.segment_nm in ('tcs_cc_appl_started','2016-08-19_2016-09-18_tinkoff_platinum_complete_application@tinkoff_action')
;



drop table if exists ser_kposminin.deliv_results_pos_unique_20161025_old;
create table user_kposminin.deliv_results_pos_unique_20161025_old as
select
   deliv_ymd,
   h_uid_rk,
   email,
   lam,
   segment_nm,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'open', open
     )
   ).open as open,
    max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'click', click
     )
   ).click as click,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'unsubscribe', unsubscribe
     )
   ).unsubscribe as unsubscribe,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'score', score
     )
   ).score as score,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'load_dttm', load_dttm
     )
   ).load_dttm as load_dttm,
   max(
     named_struct(
       'deliv_ymd', deliv_ymd,
       'model_date', model_date
     )
   ).model_date as model_date
from user_kposminin.deliv_results_20161025_old 
where deliv_ymd >= load_dttm
group by deliv_ymd, h_uid_rk, email,lam,segment_nm
;


drop table if exists user_kposminin.deliv_results_full_20161025_old;
create table user_kposminin.deliv_results_full_20161025_old as
select 
    a.deliv_ymd, 
--    array(a.h_uid_rk) as h_uid_rk_arr,
    count(distinct a.h_uid_rk) as huid_cnt,
    a.email,
    max(a.lam) as lam,
    max(a.open) as open,
    max(a.click) as click,
    max(a.unsubscribe) as unsubscribe,
    max(a.score) as score,
    max(a.load_dttm) as load_dttm,
    max(a.model_date) as model_date,
    max(if(b.utm_term is Null,0,1)) as app_start,
    max(if(b.is_processed = 3,1,0)) as app_compl,
    a.segment_nm
from user_kposminin.deliv_results_pos_unique_20161025_old a
left join prod_dds.portal_application b on a.h_uid_rk = b.utm_term
where a.segment_nm in ('tcs_cc_appl_started','2016-08-19_2016-09-18_tinkoff_platinum_complete_application@tinkoff_action')
group by a.deliv_ymd, a.email,a.segment_nm;




select 
  datediff(deliv_ymd, load_dttm) as lag,
  count(*) as cnt,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from (
  select 
    deliv_ymd, 
    email, 
    max(open) as open, 
    max(click) as click, 
    max(unsubscribe) as unsubscribe, 
    max(load_dttm) as load_dttm, 
    max(app_start) as app_start, 
    max(app_compl) as app_compl
 from user_kposminin.deliv_results_full_20161025_old
 group by deliv_ymd, email
  ) g
group by datediff(deliv_ymd, load_dttm);


select lam,segment_nm,count(*),avg(app_compl),min(deliv_ymd) from deliv_results_20161025_new where deliv_ymd >= '2016-10-04' group by lam,segment_nm;

select deliv_ymd, email, huid_cnt, model_date
from deliv_results_20161025_new a
inner join deliv_results_20161025_5 b on b.deliv_ymd = a.deliv_ymd and b.email = a.email
where
 a.app_compl = 1 and b.app_compl = 0
 ;
 
 


drop table if exists user_kposminin.deliv_results_raw_20161026;
create table user_kposminin.deliv_results_raw_20161026 as 
select
    e.ymd as deliv_ymd,
    c.h_uid_rk,
    e.email,
    e.click,
    e.open,
    e.unsubscribe,
    if(pa.utm_term is Null,0,1) as app_start,
    if(pa.is_processed = 3,1,0) as app_compl,
    if(u.h_uid_rk is Null,0,1) as lam,
    u.score, 
    u.load_dttm, 
    u.segment_nm,     
    u.ymd as model_date
from    
    (select distinct
       to_date(coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm)) as ymd,
       t.email_address_txt as email,
       if(t.click_cnt > 0, 1, 0) as click, 
       if(t.open_flg = 'Y', 1, 0) as open,
       if(t.unsubscribe_flg  = 'Y', 1, 0) as unsubscribe
    from prod_dds.target_email t
    left join user_kposminin.roboemails d on d.email = t.email_address_txt
    where
         template_name in ('BULK_RegularPromos_cc_ss','bulk_regularpromos_cc_om1','bulk_regularpromos_cc_om2','bulk_regularpromos_cc_om3','BULK_RegularPromos_cc_ss2',
                           'bulk_regularpromos_cc_om_h','bulk_regularpromos_cc_dp2','bulk_regularpromos_cc_dp','Bulk_cc_ss_dd','bulk_regularpromos_cc_ret',
                           'bulk_regularpromos_cc_ret2','BULK_RegularPromos_cc_ss_')
         and not collector_email_flg = 1
         and not_sent_flg is Null
         and d.email is Null
         and coalesce(t.send_to_customer_dttm, t.send_to_exact_dttm, t.export_dttm) >= '2016-10-04'
    ) e
    inner join (select distinct date, h_uid_rk, email_address_txt from user_kposminin.frank_bd_cc_surov) c on c.email_address_txt = e.email
    left join prod_lookalike.user_x_segment u on c.h_uid_rk = u.h_uid_rk
    left join prod_dds.portal_application pa on c.h_uid_rk = pa.utm_term
--    left join hermes.platinum_lp plp on plp.lp = pa.lp
where 
    coalesce(cast(c.date as string),'0') <= e.ymd and
    coalesce(cast(u.ymd as string),'0') <= cast(c.date as string) and
    date_add(e.ymd,-7) <= coalesce(cast(u.ymd as string),'9') and
    e.ymd <= coalesce(cast(pa.dt_created as string),'9')
--  and  (pa.product_name = 'cc_platinum' or (not plp.lp is Null) or pa.utm_term is Null)
;
   

   
drop table if exists user_kposminin.deliv_results_20161026_5;
create table user_kposminin.deliv_results_20161026_5 as 
select
    deliv_ymd,
    count(distinct h_uid_rk) as huid_cnt,
    count(*) as cnt,
    email,
    max(click) as click,
    max(open) as open,
    max(unsubscribe) as unsubscribe,
    max(app_start) as app_start,
    max(app_compl) as app_compl,
    max(lam) as lam,
    max(score) as score, 
    max(load_dttm) as load_dttm, 
    segment_nm as segment_nm,     
    max(model_date) as model_date
from user_kposminin.deliv_results_raw_20161026
group by deliv_ymd, email,segment_nm
;


select 
  if(lam=1,segment_nm,'other_segments') as segment_nm,
  count(*) as cnt,
  concat(min(deliv_ymd),' -- ', max(deliv_ymd)) as period,
  avg(open) as open_rate,
  avg(click) as click_rate,
  avg(unsubscribe) as unsub_rate,
  avg(app_start) as app_start_rate,
  avg(app_compl) as app_compl_rate
from
  user_kposminin.deliv_results_20161026_5
where deliv_ymd> '2016-09-14'
and not model_date is Null
group by 
    lam, segment_nm
;
