set hive.vectorized.execution.enabled=true;
set mapreduce.map.memory.mb=4096;
set mapreduce.map.child.java.opts=-Xmx4g;
set mapreduce.task.io.sort.mb=1024;
set mapreduce.reduce.child.java.opts=-Xmx4g;
set mapreduce.reduce.memory.mb=7000;
set mapreduce.reduce.shuffle.input.buffer.percent=0.5;
set mapreduce.input.fileinputformat.split.minsize=536870912;
set mapreduce.input.fileinputformat.split.maxsize=1073741824;
set hive.optimize.ppd=true;
set hive.merge.smallfiles.avgsize=536870912;
set hive.merge.mapredfiles=true;
set hive.merge.mapfiles=true;
set hive.hadoop.supports.splittable.combineinputformat=true;
set hive.exec.reducers.bytes.per.reducer=536870912;
set hive.exec.parallel=true;
set hive.exec.max.created.files=10000000;
set hive.exec.compress.output=true;
set hive.exec.dynamic.partition.mode=nonstrict;
set hive.exec.max.dynamic.partitions=1000000;
set hive.exec.max.dynamic.partitions.pernode=100000;
set io.seqfile.compression.type=BLOCK;


INSERT OVERWRITE TABLE user_kposminin.urlfr_tgt_cnt PARTITION (ymd, target) 
  SELECT        
           urlfr,       
           sum(cnt_positive) AS cnt_positive,       
           sum(cnt_total) AS cnt_total,       
           '2016-09-10' as ymd,
           'tinkoff_platinum_complete_application@tinkoff_action_cumul_month' as target
  FROM prod_features_liveinternet.urlfr_tgt_cnt 
  where 
    ymd between '2016-08-10' and '2016-09-10' 
    and target = 'tinkoff_platinum_complete_application@tinkoff_action'
  group by urlfr
;


create table user_kposminin.more_features_20160915_by_1mon_score as
with p as (select 
           v.id as id,
           max(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as max_score,
           min(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as min_score,
           avg(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as avg_score,
           count(*) as cnt,
           sum(v.cnt) as hits, 
           min(v.avg_hour) as min_avg_hour, 
           max(v.avg_hour) as max_avg_hour
  from prod_features_liveinternet.visits v
  inner join user_kposminin.urlfr_tgt_cnt t on t.urlfr = v.urlfr
  where 
           v.ymd = '2016-09-15' and
           t.target='tinkoff_platinum_complete_application@tinkoff_action_cumul_month' and
           t.ymd = '2016-09-10' and
          (t.cnt_total > 25000 or t.cnt_positive > 100) 
group by v.id
),
tt as (SELECT id from prod_features_liveinternet.tinkoff_actions
WHERE ymd = '2016-09-15' and action_type = 'tinkoff_platinum_complete_application')
select 
  a.*, 
  case when t.id is null then 0 else 1 end as label 
from p a
left outer join tt t on t.id = a.id
order by label desc, a.max_score desc limit 5000000;


create table user_kposminin.more_features_20160922_by_1mon_score as
with p as (select 
           v.id as id,
           max(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as max_score,
           min(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as min_score,
           avg(log((t.cnt_positive + 0.1)/(t.cnt_total - t.cnt_positive + 0.1))) as avg_score,
           count(*) as cnt,
           sum(v.cnt) as hits, 
           min(v.avg_hour) as min_avg_hour, 
           max(v.avg_hour) as max_avg_hour
  from prod_features_liveinternet.visits v
  inner join user_kposminin.urlfr_tgt_cnt t on t.urlfr = v.urlfr
  where 
           v.ymd = '2016-09-22' and
           t.target='tinkoff_platinum_complete_application@tinkoff_action_cumul_month' and
           t.ymd = '2016-09-10' and
          (t.cnt_total > 25000 or t.cnt_positive > 100) 
group by v.id
),
tt as (SELECT id from prod_features_liveinternet.tinkoff_actions
WHERE ymd = '2016-09-22' and action_type = 'tinkoff_platinum_complete_application')
select 
  a.*, 
  case when t.id is null then 0 else 1 end as label 
from p a
left outer join tt t on t.id = a.id
order by label desc, a.max_score desc limit 5000000;